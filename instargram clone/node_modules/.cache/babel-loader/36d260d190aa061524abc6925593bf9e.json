{"ast":null,"code":"var _jsxFileName = \"/Users/leta/Desktop/27-React-Westagram-1/src/pages/taeyoung/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../../../components/Nav/Nav.js';\nimport Story from './Story';\nimport Feed from './Feed';\nimport Side from './Side';\nimport './Main.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [feedData, setFeedData] = useState([]);\n  useEffect(() => {\n    fetch('/data/feedData.json', {\n      // http://localhost:3000 해당부분(로컬호스트)는 생략가능- 로컬호스트 번호가 바뀔 때마다 자동으로 로컬호스트를 잡아주기 때문에 오류발생을 막을 수 있다.\n      method: 'GET'\n    }).then(res => res.json()).then(feedData => {\n      setFeedData(feedData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Story, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), feedData.map(list => {\n          return /*#__PURE__*/_jsxDEV(Feed, {}, list.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Side, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Main, \"H/ysDepNyQzRCTC+Gz7s+dMplGw=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/leta/Desktop/27-React-Westagram-1/src/pages/taeyoung/Main/Main.js"],"names":["React","useState","useEffect","Nav","Story","Feed","Side","Main","feedData","setFeedData","fetch","method","then","res","json","map","list","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,aAAP;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,qBAAD,EAAwB;AAC3B;AACAC,MAAAA,MAAM,EAAE;AAFmB,KAAxB,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJf,EAKGF,IALH,CAKQJ,QAAQ,IAAI;AAChBC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGA,QAAQ,CAACO,GAAT,CAAaC,IAAI,IAAI;AACpB,8BAAO,QAAC,IAAD,MAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD;;GA5BQV,I;;KAAAA,I;AA8BT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Nav from '../../../components/Nav/Nav.js';\nimport Story from './Story';\nimport Feed from './Feed';\nimport Side from './Side';\n\nimport './Main.scss';\n\nfunction Main() {\n  const [feedData, setFeedData] = useState([]);\n\n  useEffect(() => {\n    fetch('/data/feedData.json', {\n      // http://localhost:3000 해당부분(로컬호스트)는 생략가능- 로컬호스트 번호가 바뀔 때마다 자동으로 로컬호스트를 잡아주기 때문에 오류발생을 막을 수 있다.\n      method: 'GET',\n    })\n      .then(res => res.json())\n      .then(feedData => {\n        setFeedData(feedData);\n      });\n  }, []);\n\n  return (\n    <>\n      <Nav />\n      <main>\n        <div>\n          <Story />\n          {feedData.map(list => {\n            return <Feed key={list.id} />;\n          })}\n        </div>\n        <Side />\n      </main>\n    </>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}